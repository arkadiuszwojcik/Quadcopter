#include <inttypes.h>#include "PID.h"PID::PID(scalar_t* input, scalar_t* output, scalar_t* setpoint,		 scalar_t kp, scalar_t ki, scalar_t kd){	this->input = input;	this->output = output;	this->setpoint = setpoint;		this->setOutputLimits(0, 255);	this->setTunings(kp, ki, kd);}void setTunings(scalar_t kp, scalar_t ki, scalar_t kd){	if (kp < 0 || ki < 0 || kd < 0) return;		this->kp = kp;	this->ki = ki;	this->kd = kd;}void setOutputLimits(scalar_t min, scalar_t max){	if(min >= max) return;		this->outMin = min;	this->outMax = max;}void update(sclar_t dt){	scalar_t input = *(this->input);	scalar_t error = *(this->setpoint) - input;		this->iAccumulated += this->ki * error * dt;	scalar_t dInput = input - this->lastInput;		// modified formula taken from http://www.controlguru.com/wp/p76.html	scalar_t output = this->ki * error + this->iAccumulated - this->kd * dInput/dt;		if (output > this->outMax) output = this->outMax;    else if(output < this->outMin) output = this->outMin;	  	*(this->output) = output;		this->lastInput = input;}