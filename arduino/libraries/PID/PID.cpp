/* Code based on Arduino PID library */#include <inttypes.h>#include "PID.h"PID::PID(float* input, float* output, float* setpoint,	float kp, float ki, float kd){	this->input = input;	this->output = output;	this->setpoint = setpoint;		this->setOutputLimits(0, 255);	this->setTunings(kp, ki, kd);}void PID::setTunings(float kp, float ki, float kd){	if (kp < 0 || ki < 0 || kd < 0) return;		this->kp = kp;	this->ki = ki;	this->kd = kd;}void PID::setOutputLimits(float min, float max){	if(min >= max) return;		this->outMin = min;	this->outMax = max;}void PID::update(float dt){	float input = *(this->input);	float error = *(this->setpoint) - input;		this->iAccumulated += this->ki * error * dt;	if (this->iAccumulated > this->outMax) this->iAccumulated = this->outMax;	else if (this->iAccumulated < this->outMin) this->iAccumulated = this->outMin;	float dInput = input - this->lastInput;		// modified formula taken from http://www.controlguru.com/wp/p76.html	float output = this->ki * error + this->iAccumulated - this->kd * dInput/dt;		if (output > this->outMax) output = this->outMax;	else if(output < this->outMin) output = this->outMin;	  	*(this->output) = output;		this->lastInput = input;}